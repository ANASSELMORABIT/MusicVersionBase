@model PRJ_FINAL_MP09_MP03.Models.MusicViewModel
@{
    Layout = null;
}

@{
    ViewData["Title"] = "Buscar Lyrics";
    
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Dashboard Musical</title>

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />

    <!-- Estilo personalizado -->
    <link href="~/css/dashboard.css" rel="stylesheet" />
</head>
<body>


    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
  <div class="container-fluid">
    <a class="navbar-brand" asp-controller="Music" asp-action="Dashboard">ðŸŽ¶ MusicApp</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav"
      aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    
    <div class="collapse navbar-collapse" id="navbarNav">
      <ul class="navbar-nav me-auto">
        <li class="nav-item">
          <a class="nav-link" asp-controller="Music" asp-action="Trending">Trending</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" asp-controller="Music" asp-action="Recomendaciones">Recomendaciones</a>
        </li>
        <li class="nav-item">
          <a class="nav-link" asp-controller="Music" asp-action="Playlist">Playlist</a>
        </li>

        <li class="nav-item"></li>
          <a class="nav-link" asp-controller="Music" asp-action="Dashboard">Dashboard</a>
        </li>

        <li class="nav-item"></li>
            <a class="nav-link" asp-controller="Music" asp-action="TopTracksArtista">Top Tracks</a>
        </li>
      </ul>
      <ul class="navbar-nav">
        <li class="nav-item">
          <a class="nav-link" asp-controller="Account" asp-action="Profile">Profile</a>
        </li>
        <li class="nav-item">
          <a class="nav-link text-danger" asp-controller="Account" asp-action="Logout">Sign Out</a>
        </li>
      </ul>
    </div>
  </div>
</nav>

  <!-- Fondo y gradientes -->
  <div class="gradient-bg">
    <svg xmlns="http://www.w3.org/2000/svg">
      <defs>
        <filter id="goo">
          <feGaussianBlur in="SourceGraphic" stdDeviation="10" result="blur" />
          <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8" result="goo" />
          <feBlend in="SourceGraphic" in2="goo" />
        </filter>
      </defs>
    </svg>
    <div class="gradients-container">
      <div class="g1"></div>
      <div class="g2"></div>
      <div class="g3"></div>
      <div class="g4"></div>
      <div class="g5"></div>
      <div class="interactive"></div>
    </div>
  </div>

  <!-- Tu contenido del Dashboard -->
  <div class="content-container">
    <form method="get" asp-controller="Music" asp-action="BuscarTrackIdLyrics" class="container mt-4 d-flex justify-content-center">
        <input type="text" name="nombreCancion" class="form-control w-50 me-2" placeholder="Buscar canciÃ³n por nombre..." required />
        <button type="submit" class="btn btn-success">Buscar</button>
    </form>

    <div id="resultadoLyrics" class="text-center mt-4"> 
        
    </div>

    
   

    @if (TempData["TrackId"] != null)
    {
        

         <div class="alert alert-success text-center mt-4">
            
            
        </div>
    }
    else if (TempData["Error"] != null)
    {
        <div class="alert alert-danger text-center mt-4">
            @TempData["Error"]
        </div>
    }


    <h1 class="text-center mt-4">ðŸŽµ Recomendaciones Musicales</h1>

    @if (TempData["TrackId"] != null)
    {
        @* <script>
            const trackId = '@TempData["TrackId"]';

            
            getTrackUrlFromApi(trackId);
        </script> *@

         <div class="alert alert-success text-center mt-4">
            
            <script>
                document.addEventListener("DOMContentLoaded", function () {
                    getTrackUrlFromApi('@TempData["TrackId"]');
                });
            </script>
        </div>
    }
    else if (TempData["Error"] != null)
    {
        <div class="alert alert-danger text-center mt-4">
            @TempData["Error"]
        </div>
    }

    
  </div> 


<script>
    document.addEventListener("DOMContentLoaded", async () => {
        const trackId = @Html.Raw(Json.Serialize(TempData["TrackId"]));
        if (!trackId) return;

        const resultado = document.getElementById("resultadoLyrics");
        resultado.innerHTML = "<p>Buscando letras...</p>";

        try {
            const response = await fetch(`https://spotify81.p.rapidapi.com/track_lyrics?id=${trackId}`, {
                method: "GET",
                headers: {
                    "x-rapidapi-key": "03bcc8278amshf34089036b951c4p1bcc4cjsn111aaee3674d",
                    "x-rapidapi-host": "spotify81.p.rapidapi.com"
                }
            });

            if (!response.ok) throw new Error("No se pudo obtener la letra de la canciÃ³n.");

            const data = await response.json();
            const lines = data.lyrics?.lines;

            if (!lines || lines.length === 0) {
                resultado.innerHTML = "<p>No se encontraron letras para esta canciÃ³n.</p>";
                return;
            }

            const lyricsHtml = lines.map(line => line.words).join('<br>');
            resultado.innerHTML = `<h4>Letras</h4><p>${lyricsHtml}</p>`;

        } catch (error) {
            resultado.innerHTML = `<p class="text-danger">Error al obtener letras: ${error.message}</p>`;
            console.error(error);
        }
    });
</script>




</body>
</html>